#!/bin/bash

start() {
    #先检测是否已经进入虚拟环境
    if [ -z "${PROJ_NAME}" ];then
        echo "please execute command {source env.sh} first!"
    else
        log_dir=${PROJ_DIR}/var/log

        #若正在执行则进行警告
        pid=`ps -u $USER -o pid -o comm -o args |grep celery|grep tasks| awk '{print $1}'`
        pid_list=($pid)
        pid_list_len=${#pid_list[*]}

        if [[ ${pid_list_len}>=30 ]];then
            echo "celery is already working!"
            echo "pelase check the log!"
        else
            celery -A tasks worker -c 10 --queues=weibo_spider -l info -f ${log_dir}/weibo_spider.log &
            celery -A tasks worker -c 10 --queues=analysis -l info -f ${log_dir}/analysis.log &
            celery -A tasks worker -c 5 --queues=default -l info -f ${log_dir}/default.log &
            echo "celery is starting working now!"
        fi
    fi
}

stop() {
    #celery purge -A worker -f
    #sleep 3
    for pid in `ps -u $USER -o pid -o comm -o args |grep celery|grep tasks| awk '{print $1}'`
    do
        kill -9 $pid
    done

    log_dir=${PROJ_DIR}/var/log

    #TODO，若不存在跳过删除
    rm ${log_dir}/weibo_spider.log
    rm ${log_dir}/analysis.log
    rm ${log_dir}/default.log
    sleep 3

    echo "celery is stopping!"
}

restart() {
    stop
    start
}

show_status() {
    pid=`ps -u $USER -o pid -o comm -o args |grep celery|grep tasks| awk '{print $1}'`
    pid_list=($pid)
    pid_list_len=${#pid_list[*]}

    if [[ ${pid_list_len}>=30 ]];
    then
        echo "celery is already working!"
    else
        echo "celery is not worked!"
    fi
}

case "$1" in
    start)
        start
        ;;
        
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    status)
        show_status
        ;;
    *)
        echo "$0 [start] [stop] [restart] [status]"
        ;;
esac
